Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2014-08-10T22:41:33-04:00

====== Interview Questions ======
Created Sunday 10 August 2014

写一下，给以后去面试的同学当提醒。

F onsite(NYC)。F主要都是年轻人。F的编程题目都很简单，看
重熟练程度。题目有list相加，回文，括号匹配变种，设计是搜索提示问很多存储设计
的问题挂了design。

G无店面直接onsite(NYC)。题目稍难，出门时Hr给我说应该有2个strong hire。但有一
个面试非常烂，遇到一个奇葩的中国人，一直埋头弄他的笔记本。问我你今年收益多少
，我说大约5%，他说你都5%了 why do you need a job。题目有dfs, bfs, 图的题目很
多。

总结一下就是多熟练一下白板写题目，不然很容易出些小错误。面的都是engineering
的位置
，不是research的位置。

Good luck!

已经悲剧

题1：anagram of a palindrome 要求O(N)

int isAnagrmaOfPalindrome(char *string){
unsigned int bitc = 0, i = 0;
int out = 0;

while(*string){
    i = *(string++) - 'a';
    bitc ^= (1 << i);
    }

out = (int)(bitc & (bitc - 1));

return !out;
}

题2：重新排序整数的digits使其最大化 (e.g. 3515 -> 5531) 要求O(1)

int largestSibling(int N) {
int digit;
int temp = 0;
int output = 0;

for (digit=9;digit>0;digit--)
   for (temp=N;temp>0;temp/=10)
     if (temp%10==digit) output = output + digit*10;

return output;
}

感想：这和data scientist有什么关系嘛？

第二道简单啊


0-9 做成bucket

先扫一遍，原数，把对应的digit扔到bucket里面去

然后从最大的bucket往外拿出来填高位。。。。。

第一题的code，O(N)的算法
int isPalindrome(char *string){
    int starting,ending;
    starting=0;/*starting character of the string*/
    ending=strlen(string)-1;/*ending character*/
    while (starting<ending){
        if (string[starting]==string[ending]){
            starting++;
            ending--;
        } else return 0; /*This is not a Palindrome*/

    }
    return 1; /*This is a Palindrome*/
}


是IT里排名较靠前的一家
两年前曾参加过它的一次 SUMMIT
觉得他们作 ONLINE TRACKING 虽然很强
但分析和模型这块不敢恭维
那天突然接到他们HR电话问要不要去看看
想看看他们在作什么新东西,就去了
此前和他们招聘经理聊了一个多小时
他们有两个大项目
其中一个我三年前就在前雇主那儿作过了,并申请了专利
另一个刚刚在现公司申请了专利,并写了篇文章,已被一家需要同行评审的杂志接收发表,
我觉得像我这种背景,只要愿意去,八层得给我了
面试日程表寄来后,我曾犹豫过
因为面试是安排在午饭后一点开始
知道这边有很多STARTUP爱借面试的名义去问或偷别人的解决方案
同时吝啬得连一顿午饭都不舍得管,
觉得他们没诚意
本想临时放他们鸽子
转念一想,前一阵他们公司在对待员工等方面的排名一直很靠前
也是挺有名的大公司,又决定去了
第一个聊的是一个小箩卜头,
问了一个题目,用了一堆他那个背景习惯用的名词
开始不知道他在说啥
等弄清他的问题后,发现那题4年前就被问到过
后来被收到我给别人讲课的材料中
自然难不倒我
第二个聊的是他们的VP TECHNOLOGY, HIRING MANAGER 的头
主要是聊他们要上的大项目中的一个
感觉可能是和HIRING MANAGER商量过的有分工
他们两人各问一个
反正文章要发了,就把大意介绍了一下,
走时要带走文章,没让,说等正式发表后再给
但能感觉他很满意
接下来和HIRING MANAGER聊
是接着前两天电话中没及说完的东西
虽然感觉HIRING MANAGER很满意我的作法
因为已经在前公司的PRODUCTION上转了几年了,并且有效
东西不可能有问题,所以很自信
但HIRING MANAGER自己的解决方案明显有问题
但没给他指出来 - 我是来面试,没义务干别的
面过这两人后,就知道OFFER肯定是我的了
在原公司的时候也参与过招人,知道很多时候对招人起决定作用的其实也就那么一两个
接下来面的两个中国同胞说实话让我不太爽
自己的理解,让他们参与面试的目的无非是让他们看看合不合群
这两哥们一副不难到在下不罢休的架式
非得找个什么地方要显得比我高,能教训我一把
从前有过面试中途起身走人的经历
因为实在看不贯那混蛋同胞的傲慢
不想再玩第二次,并且想着既然已经OFFER在握了
没必要再把它因此给扔了,所以耐着性子应付这两哥们
说实话,我前两天还在面试人
见到人家资历比我深,我根本是一当学生的态度去请教别人
这两哥们资历明显浅多了
说到GRADIENT BOOSTING, 给他讲是BOOST RESIDUAL
居然没听懂,
接着问我GRADIENT BOOSTING 和RANDOM FOREST的差别
这个问题本身就有点怪
只能答我自己的理解RANDOM FOREST象是算法的算法
因为你可以把它用在任何一个算法上
给他讲RANDOM FOREST本质上是取样你的变量 - X VARIABLE
BAGGING 是取样你的样本 - SAMPLE YOUR SAMPLE
又没听懂, 于是只能说你自己去写一遍就明白了
不知道这两中国同胞哥们的面试报告是说好还是不好
反正,两天后HR告诉我HIRING MANAGER决定给OFFER
总的PACKAGE $200K 左右
我说我的期望是$250K
其实我是想被他们拒,或拒了他们
原因很简单,
HIRING MANAGER 和他的老板都是印度人
这两同胞哥们的态度不像很合作的亲善
另外,去之前已经拿到别的OFFER
最后想告诫一些同胞们
首先得认清自己的位置
别太拿自己当回事
本人也参与过很多面试
见到来的国人兄弟
觉得不让过就对不起人家
甚至最后因为各种原因没给OFFER就觉得挺对不起人
如果所有国人都能像在下一样
感觉国人占领这个领域太容易了
因为作这行的现在基本都是中国人

这两个家伙看来什么都不懂啊。
基本的boosting就是stagewise 的方法，在resudiual上做的。
gradient的方法是数值计算方法，和random forest不是一个类型的东西。

大牛你去收拾一下这两个家伙。教他们好好做人。


Gradient boosting和random forest这个问题我不觉得奇怪。在现实中，GB和RF就是两
个互相竞争的算法，而且形式还真有点像，都是additive，只不过一个adaptive，一个
是non-adaptive。

楼主的回答实在太跳跃了。RF有两个idea，一个是bagging，还有一个就是帖子里提到
的每个split可以做stochastic fraction的sample。我看了两遍才明白楼主是在说这个。

不过就我的愚见，其实这个idea还真不是两个算法的区别所在，因为gradient
boosting里也完全可以用这个trick的。有些版本的实现，GB和RF就都是有这个参数的。

Gradient boosting和random forest这个问题我不觉得奇怪。在现实中，GB和RF就是两
个互相竞争的算法，而且形式还真有点像，都是additive，只不过一个adaptive，一个
是non-adaptive。

楼主的回答实在太跳跃了。RF有两个idea，一个是bagging，还有一个就是帖子里提到
的每个split可以做stochastic fraction的sample。我看了两遍才明白楼主是在说这个。

不过就我的愚见，其实这个idea还真不是两个算法的区别所在，因为gradient
boosting里也完全可以用这个trick的。有些版本的实现，GB和RF就都是有这个参数的。

在这个版上潜水很久，受益良多，故发个帖子回馈一下。

本人十好几年经验的后台爪哇龟公，任职万人规模的湾区软件公司，工资加奖金二十万
，股票每年万余。感觉工资还行，但股票外财太少，故试图找马。F，G都面过，但自认
为够牛，不需要刷题，于是都没成。今年终于刷了leetcode，重新开始面试。刚面了 F
，被老板的老板找去谈话。还以为要被重用，结果是被告知大裁，我老板、我、以及
其他若干人在两个月后即将下岗，还要给package，搞得我一方面觉得伤自尊，一方面
窃喜。于是光明正大地发简历，面试。

3-4周时间内和7家公司谈，失败了两家（T 和一个超牛pre-ipo) ,offer四家（F, G,
一个 pre ipo, 一个 pre-pre-ipo），一家因为已经接受offer就没有继续. 最后接受F
. （G 的工资低，但股票多），之后的几周就在修理我的房子和度假，白拿钱，直到
package到手然后新公司上班。

失败原因：面试得不够对口。比如俺从来没有说过做过 Cassandra,可是那个面试我的
小年轻非让我设计一个 Cassandra node query优化的算法。这种失败我就只好任栽了
。相比而言, F 家用 PHP，我也没用过，但人家也不和我死磕PHP。

阿三刁难：这个不是彻底没有，但并没有传说的那么严重。事实上，三哥内部还有很多
人认为他们自己人最爱刁难自己人。如果你够牛，或者碰到nice的烙印，这个不是问题
。如果两个都不是，那你就只有提高自己，同时希望一年之后不要碰上这样的。其实我
感觉被白人或者其他亚裔，包括华裔，刁难的也不比烙印少多少。

准备：去好公司面试准备是必须的，准备包括刷题，无论你多么牛。去小公司刷题不那
么重要，如果你本身够牛。即使你不准备骑驴找马，也要时不时准备一下，因为什么公
司都可能裁人。如果不幸人生完整了，你应该干的事情是开始刷题，而你的冲动会让你
准备简历马上投出去，以至于面试之前题还没刷几道，于是失败。而如果你这时刚准备
好，像我这样，就会感觉天上掉肉饼。

推荐：F 家每年收到数十万封简历，只能雇佣两千人。其中毛遂的将近三百个里面收一
个，被推荐的五个里面一个。F，G这样的公司，如果内推，至少会很快被谈，电面，不
至于泥牛。所以内推很重要。

offer: 想要好offer，最好有多家，然后让他们互飙。有了offer也会让别的公司考虑
你的时候高看一眼，同时决定也会快很多。如果骑驴找马，很难大量同步面试，怕是只
能有一两个offer，这就是骑驴找马的缺陷。

最后，对于后台资深工程师，系统设计是必须清楚了。至少要清楚你自己的产品的
scalability 和 security 是怎么做的，为什么那么做，有没有更好的办法。

对资历不长的才俊们：如果你现在的公司不是说出来别人会刮目相看的，或者是即将使
你发财的，即使你呆得挺爽，也需要考虑尽早换工作。我就是教训。要是我十几年前进
了 G, 或者五六年前去了 F，想在就不在这里和你们废话了。

完全同意楼主说的，刷题是必须的，越资深的越要刷，因为每个人的面试时间是固定的
，大部分公司就45分钟（微软60分钟）。你如果资历浅，那你只要在这个时间里把题做
出来就可以了，但是如果你资历深，光写个working solution肯定是不够的，你要给面
试官留足够的时间来问drill-in的问题，这样你才能有机会证明你自己的资历和能力。
刷题就是为了给你自己在面试的时候节约时间，尽快跳过所有人都做得到的部分，进入
展示自己能力的部分，所以是必须的。作为一个资深的candidate，如果拿不到符合自
己级别的职位，那和被拒没什么区别。
