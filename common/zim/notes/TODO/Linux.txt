Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2014-03-24T21:01:59-05:00

====== Linux ======
Created Monday 24 March 2014

## Config
1. figure out where is the best location to put your alias and configuration files, .profile or .bash_profile, check the login shell page

3. What if I put #/bin/bash in .profile? 
Then I think you can use bash specific features. 
But I recommend you to do so. 

## Monitor
2. Debian y450 hdmi audio device not show up 

4. See how you can rename a disk/volumn name in Linux

5. fcitx black box problem, see how to solve it
try it with Mint virtual machine

6. Arch has a comprehensive wiki that is also very helpful for other Linux distributions.
Search Arch wiki keywords ...

4. See how you can set up printer on Linux, e.g., Ubuntu and Debian

5. Keep your eyes on Linux voice control applications, such as Blather, Simon, VoxForge, etc.
And find a good voice to text software on Linux

6. Many deb (if not say for a specific distribution) works best for Ubuntu.
Ubuntu LTS is a great choice for personal use

7. write a script for running before Linux shutdown!!!

1. difference between alias paths and export paths? I think the difference is that whether you can use it in all subshells or not. 
2. You cannot connect to not-approved Linux servers in company network, but if you install a virtual machine you can connect to these Linux servers using the virtual machine!! Bang! This is very cool.

To show groups:
use `groups` or 
for entire group list use cut -d: -f1 [[/etc/group]]

You can xdotool -> move-to-next-monitor to move active window to next monitor in Linux, check http://makandracards.com/makandra/12447-how-to-move-a-window-to-the-next-monitor-on-xfce-xubuntu for more. You can define shortcut Shift + Win + Left/Right for this.

[ ] swap.caps.escape seems to be void after a while, strange!!

2. fix the NFS problem, check ZFS, it seems that it has zfs send functionality

3. See how you can redirect warnings of GUI applications to a file or /dev/null

[ ] write a linux user guide book when you have time
put together all good software and tips you have

one possible way to repeat what have just typed in parameter, press enter let the command fail, 
use !! then esc + . edit the parameter ... 


We went through a few basic keyboard shortcuts in our beginner's guide, but there are quite a few in there that, while not exactly intuitive, are incredibly useful just for navigating the shell. They also come in handy when you want to refer back to previous commands.

    Up/Down Arrows: The up and down arrows on your keyboard move through your last used commands. So, if you wanted to run the second to last command you ran, just hit the up arrow twice and hit Enter. You can also edit the command before you run it.
    Ctrl+Left and Ctrl+Right: Hitting Ctrl and the left or right arrow keys jumps between arguments in your command. So, if you had a typo in the middle of the command, you could jump to it quickly with Ctrl and a few taps of the left arrow key. Note that on Mac OS X and Windows, this shortcut is Esc+B and Esc+F instead. This is pretty awkward, but OS X users can change it from the Terminal's preferences if they so choose.
    Home and End: The Home and End buttons on your keyboard move your cursor to the beginning and the end of the currently typed command, respectively. This is useful if you've, say, typed in a command but realize that there's a typo in the first word. Instead of holding down the left arrow key, just hit home and correct it. You can also do the same thing with Ctrl+A and Ctrl+E, respectively (on Mac OS X, Ctrl+A and Ctrl+E are the only way to do this).
    Ctrl+U: This clears the entire line so you can type in a completely new command.
    Ctrl+K: This deletes the line from the position of the cursor to the end of the line.
    Ctrl+W: This deletes the word before the cursor only.
    Ctrl+R: This lets you search your command history for something specific. For example, if you wanted to search for the recent commands that included nano, you would hit Ctrl+R and type nano. It would show your most recent command, and you could use the up and down arrows to cycle through your history of commands using nano in them.
    Tab: One of everyone's favorite shortcuts employs Tab to autocomplete a line of text. So, say you wanted to type cd ~/Dropbox/, you could just type cd ~/Dr, hit Tab to autocomplete opbox, and continue on with your day.
expansion is great!

matlab.desktop
myCluster = parcluster('local');
myCluster.NumWorkers = 4;  % 'Modified' property now TRUE
saveProfile(myCluster);    % 'local' profile now updated,
                           % 'Modified' property now FALSE  

command vs function different, cannot mixed together in m-files
run('./file.m') vs run('file.m') doesn't work 

zim itself, better save before close, otherwise might lose data. I have the impression before that zim automatically saves notes. This might still be true, but just when your computer is too busy. It loses data. So you'd better save notes manually yourself.

!:-$ â‡” !!, i.e., the whole command, $ is the last parameter
1. The Ctrl + C trick when remote Linux server freezes at login. 
2. fg % job_number "jobs" ... or just use fg
3. If you're using BASH, just press CTRL-Z, which will suspend the process, and then use the bg command to send it to the background. If you want more detail have a look at this article on BASH job control.
