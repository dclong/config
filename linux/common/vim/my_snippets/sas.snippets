###########################################################################
#                            TextMate Snippets                            #
###########################################################################

global !p
from complete import *
endglobal

# library snippets
snippet ls "Lib on Server" b
libname ${1:ls} "/risk/aml/user_aml/dclong/${2:$1}/data";
endsnippet

snippet ll "Lib on Localhost" b
libname ${1:ll} "/cygdrive/c/Users/zkyr9jm/Documents/projects/${2:$1}/data";
endsnippet

# data step snippets
snippet d "Data Step" b
data ${1:d};
    ${2:...} 
run;
endsnippet

# procedure snippets
snippet pp "Proc Print" b
proc print data = ${1:d} ${2:(${3:where=(${4: })} ${5:obs=${6: }})};
    title "${7:$1}";
run;
endsnippet

snippet pp5 "Print Top 5" b
proc print data = ${1:d} ${2:(obs=${3:5})};
    title "${4:$1}";
run;
endsnippet

snippet ppw "Print with Where" b
proc print data = ${1:d} ${2:(where=(${3: }))};
    title "${4:$1}";
run;
endsnippet

snippet ps "Proc SQL" b
proc sql;
    ${1:select ${2:*} 
    from 
        ${3:t}
    ;}
quit;
endsnippet

# macro defintion snippets
snippet '^\s*%m|^\s*m' "Macro Definition Without Arguments" r
%macro ${1:m};
    ${2:...} 
%mend $1;
endsnippet

snippet '^\s*%m1|^\s*m1' "Macro Definition With 1 Argument" r
%macro ${1:m}(${2:arg1});
    ${3:...} 
%mend $1;
endsnippet

snippet '^%m2|^m2' "Macro Definition With 2 Arguments" r
%macro ${1:m}(${2:arg1}, ${3:arg2});
    ${4:...}
%mend $1;
endsnippet

snippet '^%m3|^m3' "Macro Definition With 3 Arguments" r
%macro ${1:m}(${2:arg1}, ${3:arg2}, ${4:arg3});
    ${5:...}
%mend $1;
endsnippet

snippet '^%m4|^m4' "Macro Definition With 4 Arguments" r
%macro ${1:m}(${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4});
    ${6:...}
%mend $1;
endsnippet

snippet '^%m5|^m5' "Macro Definition With 5 Arguments" r
%macro ${1:m}(${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5});
    ${7:...}
%mend $1;
endsnippet

snippet '^%m6|^m6' "Macro Definition With 6 Arguments" r
%macro ${1:m}(${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5}, ${7:arg6});
    ${8:...}
%mend $1;
endsnippet

snippet '^%m7|^m7' "Macro Definition With 7 Arguments" r
%macro ${1:m}(${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5}, ${7:arg6}, ${8:arg7});
    ${9:...}
%mend $1;
endsnippet

snippet '^%m8|^m8' "Macro Definition With 8 Arguments" r
%macro ${1:m}(${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5}, ${7:arg6}, ${8:arg7}, ${9:arg8});
    ${10:...}
%mend $1;
endsnippet

snippet '^%m9|^m9' "Macro Definition With 9 Arguments" r
%macro ${1:m}(${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5}, ${7:arg6}, ${8:arg7}, ${9:arg8}, ${10:arg9});
    ${11:...}
%mend $1;
endsnippet

snippet '^%m10|^m10' "Macro Definition With 10 Arguments" r
%macro ${1:m}(${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5}, ${7:arg6}, ${8:arg7}, ${9:arg8}, ${10:arg9}, ${11:arg10});
    ${12:...}
%mend $1;
endsnippet

snippet %a "%array" !b
%array(${1:arr}${2:, data=${3:d}}${4:, var=${5:v}}${6:, values=${7:l}}${8:, delim=%str(${9: })}${10:, debug=${11:N}}${12:, numlist=${13:Y}});
endsnippet

snippet %av "%array" !b
%array(${1:arr}, values=${7:v});
endsnippet

snippet %o "%do_over" !b
%do_over(${1:arr}${2:, values=${3:v}}${4:, delim=%str(${5: })}${6:, phrase=${7:?}}${8:, escape=${9:?}}${10:, between=${11:b}}${12:, macro=${13:m}}${14:, keyword=$15})
endsnippet

snippet %om "%do_over" !b
%do_over(${1:arr}, macro=${2:m})
endsnippet

snippet %op "%do_over" !b
%do_over(${1:arr}, phrase=${2:?})
endsnippet

snippet %pct "Macro %percentile" !b
%percentile(data=${1:d}${2:, var=$3}${4:, pctArr=$5}${6:, pctList=$7});
endsnippet

snippet %temp "A Temp Macro" !b
%macro temp;
%do i = 1 %to &msN.;
    %let m = &&ms&i;
    %let out = n3d.bd_tran_pty_&m.;
	%ptran(data=n3d.tran_&m., bp=B, cd=D, out=&out.);
	%percentile(data=&out., var=tot_amt, output=bd_pctl_pty_&m., pctArr=pcts);
%end;
%mend temp;
%temp;
endsnippet

# %do ... %end;
snippet '^\s*%dl|^\s*for' "Do Loop" r
%do ${1:i} = ${2:1} %to ${3:2} %by ${4:1};
    ${5:...}
%end;
endsnippet

# do; ... end;
snippet db "Do End Group" b
do;
    ${1:...}
end;
endsnippet

snippet '^\s*dl|^\s*for' "Do Loop" r
do ${1:i} = ${2:1} to ${3:2} by ${4:1};
    ${5:...}
end;
endsnippet

snippet until "Do Until Loop" b
do until (${1:condition});
    ${2:...}
end;
endsnippet

snippet while "Do While Loop" b
do while (${1:condition});
    ${2:...}
end;
endsnippet

 
